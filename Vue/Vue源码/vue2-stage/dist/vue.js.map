{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["//  我们希望重写数组中的部分方法\r\n\r\n//Array.prototype == [].__proto__\r\nlet oldArrayProto = Array.prototype; //获取数组原型\r\n\r\n//newArrayProto.__proto__ ==  oldArrayProto == Array.prototype 。在newArrayProto上加东西，不会改变原数组的原型\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [ //找到数组的变异方法  (能改变原数组的方法)\r\n    'push',     //在最后加\r\n    'pop',      //删最后一个\r\n    'shift',    //删第一个\r\n    'unshift',   //在第一个加\r\n    'reverse',\r\n    'sort',\r\n    'splice'    //删除或替换指定位置元素\r\n]   //concat slice 都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n    //arr.push(1,2,3)\r\n    newArrayProto[method] = function (...args) {\r\n        console.log(method, '被调用了')\r\n        //谁调用的函数 this 指向谁\r\n        const result = oldArrayProto[method].call(this, ...args)    //在内部调用原来的方法，并照样返回。函数的劫持，切片编程\r\n        return result\r\n    }\r\n})","import { newArrayProto } from './array'\r\nclass Observer {\r\n    constructor(data) {\r\n        //Object.defineProperty 只能劫持已经存在的属性 （vue2里面会为此单独写一些api $set $delete）\r\n\r\n        if (Array.isArray(data)) {\r\n            //这里我们可以重写数组中的方法 7个变异方法 这几个方法是可以修改数组本身的\r\n            //并对数组中的引用类型进行劫持\r\n\r\n            //保留原数组特性，并且可以重写部分方法。通过重写方法对这些方法进行监听。\r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n\r\n    }\r\n    walk(data) {    //循环对象，对属性依次劫持\r\n        // \"重新定义\"属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n\r\n    observeArray(array) {    //观测数组\r\n        array.forEach(item => {\r\n            observe(item)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport function defineReactive(target, key, value) {    //闭包  属性劫持\r\n    observe(value);  //递归进行劫持，直到劫持的不是对象位置 （33行）    //对象里有对象的情况，或者对数组里的内容进行检测\r\n    Object.defineProperty(target, key, {\r\n        get() { //取值时执行get\r\n            console.log('getName', key)\r\n\r\n            return value;\r\n        },\r\n\r\n        set(newValue) { //赋值时执行set\r\n            if (newValue == value) return;\r\n            //在设置值的时候还需要进行劫持，绑定。\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport function observe(data) {\r\n    //对这个对象进行劫持\r\n    if (typeof data !== 'object' || data == null) {\r\n        return; //只对对象进行劫持\r\n    }\r\n\r\n    //如果一个对象被劫持过了，那就不需要再被劫持了（要判断一个对象是否被劫持，可以增添一个实例，用实例来判断是否被劫持）\r\n\r\n    return new Observer(data)\r\n}","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {    //vm.name\r\n        get() {\r\n            return vm[target][key]  //vm._data.name\r\n        },\r\n        set(newValue) {\r\n\r\n\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data // data 可能是函数\r\n    data = typeof data === 'function' ? data.call(this) : data; //如果是函数就执行，且要改变data的指向，然后return一个对象回来\r\n\r\n    vm._data = data //将data挂载到了vm上\r\n    //拿到数据之后要对数据进行劫持 vue2里 采用了一个api defineProperty\r\n\r\n    //vue2 的响应式原理， 对象属性的劫持\r\n    observe(data)\r\n\r\n    //将 vm._data 用 vm 来代替，写一个代理的函数\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}\r\n\r\n","import { initState } from \"./state\"\r\n\r\nexport function initMixin(Vue) {    //给Vue增加_init方法\r\n    Vue.prototype._init = function (options) {  //用于初始化操作\r\n        //vue vm.$options 就是获取用户的配置\r\n        const vm = this     //这里的this指的是实例\r\n        //我们使用的 vue 中的 $nextTick $data $attr ... 在前面加一个 $专指一类vue的实例上的属性\r\n        vm.$options = options     //将传入的东西挂载\r\n        //初始化状态\r\n        initState(vm)\r\n    }\r\n}\r\n\r\n","import { initMixin } from './init'\r\n\r\n//不适用 class 因为在class中添加方法，多了的话很不友好,并且构造函数可以把 方法写到别的文件中\r\n\r\n//这里采用  构造方法的形式\r\nfunction Vue(options) { // options 就是用户的选项\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue)  //扩展了 init 方法\r\n\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","console","log","args","result","call","Observer","data","isArray","__proto__","observeArray","walk","keys","key","defineReactive","array","item","observe","target","value","defineProperty","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EAEA;EACA,IAAIA,aAAa,GAAGC,KAAK,CAACC,SAA1B;EAEA;;EACO,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcL,aAAd,CAApB,CAAA;EAEP,IAAIM,OAAO,GAAG;EACV,MADU;EAEV,KAFU;EAGV,OAHU;EAIV,SAJU;EAKV,SALU,EAMV,MANU,EAOV,QAPU;EAAA,CAAd;;EAUAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAI;EACtB;EACAL,EAAAA,aAAa,CAACK,MAAD,CAAb,GAAwB,YAAmB;EAAA,IAAA,IAAA,qBAAA,CAAA;;EACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,MAApB,EADuC;;EAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANG,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;QAANA,IAAM,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,KAAA;;EAGvC,IAAA,IAAMC,MAAM,GAAG,CAAAZ,qBAAAA,GAAAA,aAAa,CAACQ,MAAD,CAAb,EAAsBK,IAAtB,+BAA2B,IAA3B,CAAA,CAAA,MAAA,CAAoCF,IAApC,CAAA,CAAf,CAHuC;;;EAIvC,IAAA,OAAOC,MAAP,CAAA;KAJJ,CAAA;EAMH,CARD,CAAA;;MCjBME;EACF,EAAA,SAAA,QAAA,CAAYC,IAAZ,EAAkB;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;;EACd;EAEA,IAAA,IAAId,KAAK,CAACe,OAAN,CAAcD,IAAd,CAAJ,EAAyB;EACrB;EACA;EAEA;QACAA,IAAI,CAACE,SAAL,GAAiBd,aAAjB,CAAA;QACA,IAAKe,CAAAA,YAAL,CAAkBH,IAAlB,CAAA,CAAA;EACH,KAPD,MAOO;QACH,IAAKI,CAAAA,IAAL,CAAUJ,IAAV,CAAA,CAAA;EACH,KAAA;EAEJ,GAAA;;;;EACD,IAAA,KAAA,EAAA,SAAA,IAAA,CAAKA,IAAL,EAAW;EAAK;EACZ;QACAX,MAAM,CAACgB,IAAP,CAAYL,IAAZ,EAAkBR,OAAlB,CAA0B,UAAAc,GAAG,EAAA;UAAA,OAAIC,cAAc,CAACP,IAAD,EAAOM,GAAP,EAAYN,IAAI,CAACM,GAAD,CAAhB,CAAlB,CAAA;SAA7B,CAAA,CAAA;EACH,KAAA;;;EAED,IAAA,KAAA,EAAA,SAAA,YAAA,CAAaE,KAAb,EAAoB;EAAK;EACrBA,MAAAA,KAAK,CAAChB,OAAN,CAAc,UAAAiB,IAAI,EAAI;UAClBC,OAAO,CAACD,IAAD,CAAP,CAAA;SADJ,CAAA,CAAA;EAGH,KAAA;;;;;;EAIE,SAASF,cAAT,CAAwBI,MAAxB,EAAgCL,GAAhC,EAAqCM,KAArC,EAA4C;EAAK;EACpDF,EAAAA,OAAO,CAACE,KAAD,CAAP,CAD+C;;EAE/CvB,EAAAA,MAAM,CAACwB,cAAP,CAAsBF,MAAtB,EAA8BL,GAA9B,EAAmC;EAC/BQ,IAAAA,GAD+B,EACzB,SAAA,GAAA,GAAA;EAAE;EACJpB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBW,GAAvB,CAAA,CAAA;EAEA,MAAA,OAAOM,KAAP,CAAA;OAJ2B;MAO/BG,GAP+B,EAAA,SAAA,GAAA,CAO3BC,QAP2B,EAOjB;EAAE;EACZ,MAAA,IAAIA,QAAQ,IAAIJ,KAAhB,EAAuB,OADb;;QAGVF,OAAO,CAACM,QAAD,CAAP,CAAA;EACAJ,MAAAA,KAAK,GAAGI,QAAR,CAAA;EACH,KAAA;KAZL,CAAA,CAAA;EAcH,CAAA;EAGM,SAASN,OAAT,CAAiBV,IAAjB,EAAuB;EAC1B;IACA,IAAI,OAAA,CAAOA,IAAP,CAAgB,KAAA,QAAhB,IAA4BA,IAAI,IAAI,IAAxC,EAA8C;EAC1C,IAAA,OAD0C;EAE7C,GAJyB;;;EAQ1B,EAAA,OAAO,IAAID,QAAJ,CAAaC,IAAb,CAAP,CAAA;EACH;;ECxDM,SAASiB,SAAT,CAAmBC,EAAnB,EAAuB;EAC1B,EAAA,IAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB,CAAA;;IACA,IAAID,IAAI,CAACnB,IAAT,EAAe;MACXqB,QAAQ,CAACH,EAAD,CAAR,CAAA;EACH,GAAA;EAEJ,CAAA;;EAED,SAASI,KAAT,CAAeJ,EAAf,EAAmBP,MAAnB,EAA2BL,GAA3B,EAAgC;EAC5BjB,EAAAA,MAAM,CAACwB,cAAP,CAAsBK,EAAtB,EAA0BZ,GAA1B,EAA+B;EAAK;EAChCQ,IAAAA,GAD2B,EACrB,SAAA,GAAA,GAAA;QACF,OAAOI,EAAE,CAACP,MAAD,CAAF,CAAWL,GAAX,CAAP,CADE;OADqB;MAI3BS,GAJ2B,EAAA,SAAA,GAAA,CAIvBC,QAJuB,EAIb;EAGVE,MAAAA,EAAE,CAACP,MAAD,CAAF,CAAWL,GAAX,IAAkBU,QAAlB,CAAA;EACH,KAAA;KARL,CAAA,CAAA;EAUH,CAAA;;EAGD,SAASK,QAAT,CAAkBH,EAAlB,EAAsB;IAClB,IAAIlB,IAAI,GAAGkB,EAAE,CAACE,QAAH,CAAYpB,IAAvB,CADkB;;EAElBA,EAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACF,IAAL,CAAU,IAAV,CAA7B,GAA+CE,IAAtD,CAFkB;;EAIlBkB,EAAAA,EAAE,CAACK,KAAH,GAAWvB,IAAX,CAJkB;EAKlB;EAEA;;EACAU,EAAAA,OAAO,CAACV,IAAD,CAAP,CARkB;;EAWlB,EAAA,KAAK,IAAIM,GAAT,IAAgBN,IAAhB,EAAsB;EAClBsB,IAAAA,KAAK,CAACJ,EAAD,EAAK,OAAL,EAAcZ,GAAd,CAAL,CAAA;EACH,GAAA;EACJ;;ECpCM,SAASkB,SAAT,CAAmBC,GAAnB,EAAwB;EAAK;EAChCA,EAAAA,GAAG,CAACtC,SAAJ,CAAcuC,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EAAG;EACxC;EACA,IAAA,IAAMT,EAAE,GAAG,IAAX,CAFqC;EAGrC;;EACAA,IAAAA,EAAE,CAACE,QAAH,GAAcO,OAAd,CAJqC;EAKrC;;MACAV,SAAS,CAACC,EAAD,CAAT,CAAA;KANJ,CAAA;EAQH;;ECPD;;EACA,SAASO,GAAT,CAAaE,OAAb,EAAsB;EAAE;IACpB,IAAKD,CAAAA,KAAL,CAAWC,OAAX,CAAA,CAAA;EACH,CAAA;;EAEDH,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}